version: '3.3'

services:
  nginx:
    container_name: 'nginx'
    build: ./nginx
    ports:
      - ${APP_PORT}:80
    volumes:
      - web-static:/home/app/titas/static
    depends_on:
      - web
    restart: "on-failure"
  db:
    image: postgres:11-alpine
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGPORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
    restart: "on-failure"
  memcached:
    container_name: 'memcached'
    image: 'memcached:latest'
    ports:
      - "11212:11211"
    restart: "on-failure"
  web:
    build: . #build the image for the web service from the dockerfile in parent directory
    command: sh -c "poetry run python manage.py makemigrations &&
                    poetry run python manage.py migrate &&
                    poetry run python manage.py initiate_admin &&
                    poetry run python manage.py initiate_site &&
                    poetry run python manage.py collectstatic --noinput &&
                    poetry run gunicorn config.wsgi:application --bind 0.0.0.0:${APP_PORT}"
    volumes:
      - web-django:/home/app/titas
      - web-static:/home/app/titas/static
    env_file:
      - .env
    image: titas

    expose:
      - ${APP_PORT}
    restart: "on-failure"
    depends_on:
      - db
      - memcached

volumes:
  postgres_data:
  web-django:
  web-static: